"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./contexts/AuthContext.tsx":
/*!**********************************!*\
  !*** ./contexts/AuthContext.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/api */ \"./services/api.ts\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cookies-next */ \"./node_modules/cookies-next/lib/index.js\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(cookies_next__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _utils_mockData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/mockData */ \"./utils/mockData.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Function to validate stored auth data\n    const validateStoredAuth = ()=>{\n        try {\n            const storedUser = localStorage.getItem(\"user\");\n            const storedToken = localStorage.getItem(\"token\");\n            if (!storedUser || !storedToken) return null;\n            const userData = JSON.parse(storedUser);\n            // Only validate essential fields but preserve all user data\n            if (!userData.email) return null;\n            // Ensure we preserve profile data\n            if (userData.profileImage) {\n                userData.profileImage = userData.profileImage;\n            }\n            if (userData.displayName) {\n                userData.displayName = userData.displayName;\n            }\n            // Ensure we have required fields with defaults if missing\n            return {\n                user: {\n                    ...userData,\n                    id: userData.id || \"temp-id\",\n                    role: userData.role || \"USER\",\n                    quantumScore: userData.quantumScore || 0,\n                    spiritGlyphTier: userData.spiritGlyphTier || 1,\n                    followers: userData.followers || [],\n                    following: userData.following || [],\n                    followerCount: userData.followerCount || 0,\n                    hasPaidOnboardingFee: userData.hasPaidOnboardingFee || false,\n                    isNewsletterSubscriber: userData.isNewsletterSubscriber || false,\n                    unlockedPremiumAccess: userData.unlockedPremiumAccess || {}\n                },\n                token: storedToken\n            };\n        } catch (error) {\n            console.error(\"Error validating stored auth:\", error);\n            return null;\n        }\n    };\n    // Function to store auth data\n    const storeAuthData = (userData, authToken)=>{\n        try {\n            // Preserve existing data when updating\n            const existingData = localStorage.getItem(\"user\");\n            let finalUserData = userData;\n            if (existingData) {\n                const existingUser = JSON.parse(existingData);\n                finalUserData = {\n                    ...existingUser,\n                    ...userData,\n                    // Explicitly preserve these fields if they exist\n                    profileImage: userData.profileImage || existingUser.profileImage,\n                    displayName: userData.displayName || existingUser.displayName\n                };\n            }\n            localStorage.setItem(\"user\", JSON.stringify(finalUserData));\n            localStorage.setItem(\"token\", authToken);\n            (0,cookies_next__WEBPACK_IMPORTED_MODULE_3__.setCookie)(\"auth_token\", authToken);\n        } catch (error) {\n            console.error(\"Error storing auth data:\", error);\n        }\n    };\n    // Function to clear auth data\n    const clearAuthData = ()=>{\n        try {\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"token\");\n            (0,cookies_next__WEBPACK_IMPORTED_MODULE_3__.deleteCookie)(\"auth_token\");\n        } catch (error) {\n            console.error(\"Error clearing auth data:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const checkAuthStatus = async ()=>{\n            setIsLoading(true);\n            try {\n                // First validate stored auth data\n                const storedAuth = validateStoredAuth();\n                if (storedAuth) {\n                    setUser(storedAuth.user);\n                    setToken(storedAuth.token);\n                    setIsAuthenticated(true);\n                    console.log(\"User authenticated from storage:\", storedAuth.user);\n                    return;\n                }\n                // If no valid stored auth, try API\n                try {\n                    var _response_data;\n                    const response = await _services_api__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"/auth/me\");\n                    if ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.user) {\n                        const userData = response.data.user;\n                        const authToken = response.data.token || \"default-token\";\n                        setUser(userData);\n                        setToken(authToken);\n                        setIsAuthenticated(true);\n                        storeAuthData(userData, authToken);\n                        console.log(\"User authenticated from API:\", userData);\n                        return;\n                    }\n                } catch (apiError) {\n                    console.error(\"API auth check failed:\", apiError);\n                }\n                // If both storage and API fail, clear any stale data\n                clearAuthData();\n                setUser(null);\n                setToken(\"\");\n                setIsAuthenticated(false);\n                // Create demo user if in demo mode\n                if (process.env.NEXT_PUBLIC_DEMO_MODE === \"true\") {\n                    console.log(\"Demo mode active, creating mock user\");\n                    const mockUserData = _utils_mockData__WEBPACK_IMPORTED_MODULE_5__.mockUser;\n                    const mockToken = \"demo-token-xyz\";\n                    setUser(mockUserData);\n                    setToken(mockToken);\n                    setIsAuthenticated(true);\n                    storeAuthData(mockUserData, mockToken);\n                }\n            } catch (error) {\n                console.error(\"Auth status check failed:\", error);\n                clearAuthData();\n                setUser(null);\n                setToken(\"\");\n                setIsAuthenticated(false);\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        checkAuthStatus();\n    }, []);\n    const logout = ()=>{\n        try {\n            clearAuthData();\n            setUser(null);\n            setToken(\"\");\n            setIsAuthenticated(false);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Logged out successfully\");\n        } catch (error) {\n            console.error(\"Logout error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"Error during logout\");\n        }\n    };\n    const login = async (email, password)=>{\n        try {\n            clearAuthData(); // Clear any existing auth data first\n            let userData;\n            let authToken;\n            // Simulate API login with test users\n            if (email === \"login\" && password === \"password\") {\n                userData = {\n                    id: \"test-user-789\",\n                    email: \"test@example.com\",\n                    username: \"testuser\",\n                    displayName: \"Test User\",\n                    role: \"USER\",\n                    quantumScore: 50,\n                    spiritGlyphTier: 1,\n                    profileImage: \"https://api.dicebear.com/7.x/personas/svg?seed=test\",\n                    createdAt: new Date().toISOString(),\n                    updatedAt: new Date().toISOString(),\n                    services_published: 2,\n                    total_downloads: 156,\n                    average_rating: 4.2,\n                    weekly_stats: {\n                        views: 45,\n                        interactions: 12\n                    },\n                    monthly_stats: {\n                        views: 180,\n                        interactions: 48\n                    },\n                    followers: [],\n                    following: [],\n                    followerCount: 5,\n                    hasPaidOnboardingFee: true,\n                    isNewsletterSubscriber: true,\n                    unlockedPremiumAccess: {\n                        galatea: false\n                    }\n                };\n                authToken = \"test-token-xyz\";\n            } else if (email === \"angelfieroink@hotmail.com\") {\n                userData = {\n                    id: \"sphinx-user-123\",\n                    email: \"angelfieroink@hotmail.com\",\n                    username: \"sphinx\",\n                    displayName: \"Sphinx\",\n                    role: \"ADMIN\",\n                    quantumScore: 245,\n                    spiritGlyphTier: 3,\n                    profileImage: \"/images/sphinx-profile.png\",\n                    createdAt: \"2024-01-15T00:00:00.000Z\",\n                    updatedAt: new Date().toISOString(),\n                    services_published: 8,\n                    total_downloads: 1245,\n                    average_rating: 4.8,\n                    weekly_stats: {\n                        views: 245,\n                        interactions: 89\n                    },\n                    monthly_stats: {\n                        views: 982,\n                        interactions: 367\n                    },\n                    quarterly_conversions: 156,\n                    yearly_revenue: 45600,\n                    user_engagement: 78,\n                    followers: [\n                        \"claude-user-456\"\n                    ],\n                    following: [\n                        \"claude-user-456\"\n                    ],\n                    followerCount: 42,\n                    hasPaidOnboardingFee: true,\n                    isNewsletterSubscriber: true,\n                    unlockedPremiumAccess: {\n                        galatea: true,\n                        quantum: true,\n                        aegis: true\n                    }\n                };\n                authToken = \"sphinx-token-xyz\";\n            } else if (email === \"angelfieroink1@hotmail.com\") {\n                userData = {\n                    id: \"claude-user-456\",\n                    email: \"angelfieroink1@hotmail.com\",\n                    username: \"claude\",\n                    displayName: \"Claude\",\n                    role: \"ADMIN\",\n                    quantumScore: 315,\n                    spiritGlyphTier: 4,\n                    profileImage: \"/images/claude-profile.png\",\n                    createdAt: \"2024-01-01T00:00:00.000Z\",\n                    updatedAt: new Date().toISOString(),\n                    services_published: 12,\n                    total_downloads: 2156,\n                    average_rating: 4.9,\n                    weekly_stats: {\n                        views: 312,\n                        interactions: 145\n                    },\n                    monthly_stats: {\n                        views: 1245,\n                        interactions: 578\n                    },\n                    quarterly_conversions: 234,\n                    yearly_revenue: 68900,\n                    user_engagement: 85,\n                    followers: [\n                        \"sphinx-user-123\"\n                    ],\n                    following: [\n                        \"sphinx-user-123\"\n                    ],\n                    followerCount: 56,\n                    hasPaidOnboardingFee: true,\n                    isNewsletterSubscriber: true,\n                    unlockedPremiumAccess: {\n                        galatea: true,\n                        quantum: true,\n                        aegis: true,\n                        nexus: true\n                    }\n                };\n                authToken = \"claude-token-xyz\";\n            } else {\n                throw new Error(\"Invalid login credentials\");\n            }\n            // Set auth state\n            setUser(userData);\n            setToken(authToken);\n            setIsAuthenticated(true);\n            // Store auth data\n            storeAuthData(userData, authToken);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Logged in successfully\");\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            clearAuthData();\n            setUser(null);\n            setToken(\"\");\n            setIsAuthenticated(false);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"Login failed\");\n            throw error;\n        }\n    };\n    const signup = async (email, password, username)=>{\n        try {\n            // In a real app, register user with server\n            // For now just set auth state with mock data\n            setIsAuthenticated(true);\n            setUser({\n                ..._utils_mockData__WEBPACK_IMPORTED_MODULE_5__.mockUser,\n                email,\n                username,\n                following: [],\n                followers: [],\n                followerCount: 0\n            });\n            // Set mock auth token in cookie\n            (0,cookies_next__WEBPACK_IMPORTED_MODULE_3__.setCookie)(\"auth_token\", \"mock_token_12345\", {\n                maxAge: 60 * 60 * 24 * 7\n            });\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Account created successfully\");\n        } catch (error) {\n            console.error(\"Signup error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"Failed to create account\");\n            throw error;\n        }\n    };\n    const updateProfileImage = async (imageUrl)=>{\n        if (!user) return;\n        try {\n            // Update the user object with new image\n            const updatedUser = {\n                ...user,\n                profileImage: imageUrl\n            };\n            // Update local state first\n            setUser(updatedUser);\n            // Update localStorage\n            localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n            // Try to update backend if not in development mode\n            if (false) {}\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Profile image updated successfully\");\n        } catch (error) {\n            console.error(\"Error updating profile image:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"Failed to update profile image\");\n            throw error;\n        }\n    };\n    const updateDisplayName = async (displayName)=>{\n        if (!user) return;\n        try {\n            const updatedUser = {\n                ...user,\n                displayName\n            };\n            // Update local state first\n            setUser(updatedUser);\n            // Update localStorage\n            localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n            // Try to update backend if not in development mode\n            if (false) {}\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Display name updated successfully\");\n        } catch (error) {\n            console.error(\"Error updating display name:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"Failed to update display name\");\n            throw error;\n        }\n    };\n    const isSeller = (user === null || user === void 0 ? void 0 : user.role) === \"SELLER\" || (user === null || user === void 0 ? void 0 : user.role) === \"ADMIN\";\n    // Follow user functionality\n    const followUser = async (userId)=>{\n        if (!user) return;\n        try {\n            // In a real app, make API call to follow user\n            // Clone the current following list or create a new one\n            const following = [\n                ...user.following || []\n            ];\n            // Add the user ID if not already following\n            if (!following.includes(userId)) {\n                following.push(userId);\n            }\n            // Update the local user state\n            setUser({\n                ...user,\n                following\n            });\n            // Increase the other user's quantum score (in a real app this would be handled by the server)\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Now following user (+5 points to them)\");\n        } catch (error) {\n            console.error(\"Follow error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"Failed to follow user\");\n            throw error;\n        }\n    };\n    // Unfollow user functionality\n    const unfollowUser = async (userId)=>{\n        if (!user) return;\n        try {\n            // In a real app, make API call to unfollow user\n            // Filter out the user ID from the following list\n            const following = (user.following || []).filter((id)=>id !== userId);\n            // Update the local user state\n            setUser({\n                ...user,\n                following\n            });\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Unfollowed user\");\n        } catch (error) {\n            console.error(\"Unfollow error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"Failed to unfollow user\");\n            throw error;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            isAuthenticated,\n            login,\n            logout,\n            signup,\n            updateProfileImage,\n            updateDisplayName,\n            isSeller,\n            token,\n            isLoading,\n            followUser,\n            unfollowUser\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\angel\\\\Desktop\\\\Saphira\\\\saphira-q\\\\frontend\\\\frontend\\\\contexts\\\\AuthContext.tsx\",\n        lineNumber: 485,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AuthProvider, \"bRNO9Vc+Jo731AHTCh/Wz5d18rk=\");\n_c = AuthProvider;\nconst useAuth = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./contexts/AuthContext.tsx\n"));

/***/ })

});