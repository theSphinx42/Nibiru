"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_StarRendererCanvas_tsx";
exports.ids = ["components_StarRendererCanvas_tsx"];
exports.modules = {

/***/ "./components/StarRendererCanvas.tsx":
/*!*******************************************!*\
  !*** ./components/StarRendererCanvas.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\r\n * StarRendererCanvas\r\n * \r\n * A canvas-based star renderer that creates an animated or static starfield\r\n * with adjustable parameters.\r\n */ const StarRendererCanvas = ({ width, height, starCount, glowIntensity, animationSpeed })=>{\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const starsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    // Initialize stars\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!canvasRef.current) return;\n        const canvas = canvasRef.current;\n        canvas.width = width;\n        canvas.height = height;\n        const stars = [];\n        const colors = [\n            \"#FFFFFF\",\n            \"#E0E0FF\",\n            \"#FFFFD0\",\n            \"#FFE8D0\"\n        ];\n        for(let i = 0; i < starCount; i++){\n            stars.push({\n                x: Math.random() * width - width / 2,\n                y: Math.random() * height - height / 2,\n                z: Math.random() * 1000,\n                size: Math.random() * 1.5 + 0.5,\n                color: colors[Math.floor(Math.random() * colors.length)],\n                opacity: Math.random() * 0.5 + 0.5\n            });\n        }\n        starsRef.current = stars;\n    }, [\n        width,\n        height,\n        starCount\n    ]);\n    // Helper function to check if a value is a valid finite number\n    const isValidNumber = (value)=>{\n        return typeof value === \"number\" && isFinite(value) && !isNaN(value);\n    };\n    // Animation loop\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!canvasRef.current) return;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const animate = ()=>{\n            ctx.fillStyle = \"#000000\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Move coordinate system to center for perspective\n            ctx.save();\n            ctx.translate(canvas.width / 2, canvas.height / 2);\n            for (const star of starsRef.current){\n                // Calculate perspective\n                const scale = 1000 / Math.max(1000 - star.z, 1); // Prevent division by zero\n                const x = star.x * scale;\n                const y = star.y * scale;\n                const size = star.size * scale;\n                // Skip rendering if any values are invalid\n                if (!isValidNumber(x) || !isValidNumber(y) || !isValidNumber(size)) {\n                    continue;\n                }\n                // Draw star\n                ctx.globalAlpha = Math.min(Math.max(star.opacity * (1 - star.z / 1000), 0), 1);\n                ctx.fillStyle = star.color;\n                // Add glow effect based on intensity\n                if (glowIntensity > 0 && size > 0) {\n                    try {\n                        const glowRadius = size * (1 + glowIntensity * 3);\n                        // Only create gradient if all values are valid\n                        if (isValidNumber(x) && isValidNumber(y) && isValidNumber(glowRadius)) {\n                            const glow = ctx.createRadialGradient(x, y, 0, x, y, glowRadius);\n                            glow.addColorStop(0, star.color);\n                            glow.addColorStop(0.1, `${star.color}80`);\n                            glow.addColorStop(1, \"transparent\");\n                            ctx.fillStyle = glow;\n                            ctx.fillRect(x - glowRadius, y - glowRadius, glowRadius * 2, glowRadius * 2);\n                        } else {\n                            // Fallback for invalid values\n                            ctx.fillStyle = star.color;\n                            ctx.beginPath();\n                            ctx.arc(x, y, size, 0, Math.PI * 2);\n                            ctx.fill();\n                        }\n                    } catch (error) {\n                        // Fallback if gradient creation fails\n                        ctx.fillStyle = star.color;\n                        ctx.beginPath();\n                        ctx.arc(x, y, size, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                } else {\n                    // Draw the star itself without glow\n                    ctx.fillStyle = star.color;\n                    ctx.beginPath();\n                    ctx.arc(x, y, size, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                // Only move stars if animation is enabled\n                if (animationSpeed > 0) {\n                    // Move star closer (z-axis)\n                    star.z -= animationSpeed;\n                    // Reset star if it passes the screen\n                    if (star.z < 0) {\n                        star.z = 1000;\n                        star.x = Math.random() * canvas.width - canvas.width / 2;\n                        star.y = Math.random() * canvas.height - canvas.height / 2;\n                    }\n                }\n            }\n            ctx.restore();\n            animationRef.current = requestAnimationFrame(animate);\n        };\n        animate();\n        return ()=>{\n            if (animationRef.current) {\n                cancelAnimationFrame(animationRef.current);\n            }\n        };\n    }, [\n        width,\n        height,\n        glowIntensity,\n        animationSpeed\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        className: \"w-full h-full\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\angel\\\\Desktop\\\\Saphira\\\\saphira-q\\\\frontend\\\\components\\\\StarRendererCanvas.tsx\",\n        lineNumber: 172,\n        columnNumber: 10\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StarRendererCanvas);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/StarRendererCanvas.tsx\n");

/***/ })

};
;