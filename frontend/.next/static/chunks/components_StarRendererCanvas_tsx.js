"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["components_StarRendererCanvas_tsx"],{

/***/ "./components/StarRendererCanvas.tsx":
/*!*******************************************!*\
  !*** ./components/StarRendererCanvas.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\n/**\r\n * StarRendererCanvas\r\n * \r\n * A canvas-based star renderer that creates an animated or static starfield\r\n * with adjustable parameters.\r\n */ const StarRendererCanvas = (param)=>{\n    let { width, height, starCount, glowIntensity, animationSpeed } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const starsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    // Initialize stars\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!canvasRef.current) return;\n        const canvas = canvasRef.current;\n        canvas.width = width;\n        canvas.height = height;\n        const stars = [];\n        const colors = [\n            \"#FFFFFF\",\n            \"#E0E0FF\",\n            \"#FFFFD0\",\n            \"#FFE8D0\"\n        ];\n        for(let i = 0; i < starCount; i++){\n            stars.push({\n                x: Math.random() * width - width / 2,\n                y: Math.random() * height - height / 2,\n                z: Math.random() * 1000,\n                size: Math.random() * 1.5 + 0.5,\n                color: colors[Math.floor(Math.random() * colors.length)],\n                opacity: Math.random() * 0.5 + 0.5\n            });\n        }\n        starsRef.current = stars;\n    }, [\n        width,\n        height,\n        starCount\n    ]);\n    // Helper function to check if a value is a valid finite number\n    const isValidNumber = (value)=>{\n        return typeof value === \"number\" && isFinite(value) && !isNaN(value);\n    };\n    // Animation loop\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!canvasRef.current) return;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const animate = ()=>{\n            ctx.fillStyle = \"#000000\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Move coordinate system to center for perspective\n            ctx.save();\n            ctx.translate(canvas.width / 2, canvas.height / 2);\n            for (const star of starsRef.current){\n                // Calculate perspective\n                const scale = 1000 / Math.max(1000 - star.z, 1); // Prevent division by zero\n                const x = star.x * scale;\n                const y = star.y * scale;\n                const size = star.size * scale;\n                // Skip rendering if any values are invalid\n                if (!isValidNumber(x) || !isValidNumber(y) || !isValidNumber(size)) {\n                    continue;\n                }\n                // Draw star\n                ctx.globalAlpha = Math.min(Math.max(star.opacity * (1 - star.z / 1000), 0), 1);\n                ctx.fillStyle = star.color;\n                // Add glow effect based on intensity\n                if (glowIntensity > 0 && size > 0) {\n                    try {\n                        const glowRadius = size * (1 + glowIntensity * 3);\n                        // Only create gradient if all values are valid\n                        if (isValidNumber(x) && isValidNumber(y) && isValidNumber(glowRadius)) {\n                            const glow = ctx.createRadialGradient(x, y, 0, x, y, glowRadius);\n                            glow.addColorStop(0, star.color);\n                            glow.addColorStop(0.1, \"\".concat(star.color, \"80\"));\n                            glow.addColorStop(1, \"transparent\");\n                            ctx.fillStyle = glow;\n                            ctx.fillRect(x - glowRadius, y - glowRadius, glowRadius * 2, glowRadius * 2);\n                        } else {\n                            // Fallback for invalid values\n                            ctx.fillStyle = star.color;\n                            ctx.beginPath();\n                            ctx.arc(x, y, size, 0, Math.PI * 2);\n                            ctx.fill();\n                        }\n                    } catch (error) {\n                        // Fallback if gradient creation fails\n                        ctx.fillStyle = star.color;\n                        ctx.beginPath();\n                        ctx.arc(x, y, size, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                } else {\n                    // Draw the star itself without glow\n                    ctx.fillStyle = star.color;\n                    ctx.beginPath();\n                    ctx.arc(x, y, size, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                // Only move stars if animation is enabled\n                if (animationSpeed > 0) {\n                    // Move star closer (z-axis)\n                    star.z -= animationSpeed;\n                    // Reset star if it passes the screen\n                    if (star.z < 0) {\n                        star.z = 1000;\n                        star.x = Math.random() * canvas.width - canvas.width / 2;\n                        star.y = Math.random() * canvas.height - canvas.height / 2;\n                    }\n                }\n            }\n            ctx.restore();\n            animationRef.current = requestAnimationFrame(animate);\n        };\n        animate();\n        return ()=>{\n            if (animationRef.current) {\n                cancelAnimationFrame(animationRef.current);\n            }\n        };\n    }, [\n        width,\n        height,\n        glowIntensity,\n        animationSpeed\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        className: \"w-full h-full\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\angel\\\\Desktop\\\\Saphira\\\\saphira-q\\\\frontend\\\\components\\\\StarRendererCanvas.tsx\",\n        lineNumber: 172,\n        columnNumber: 10\n    }, undefined);\n};\n_s(StarRendererCanvas, \"E09AgoDqD1//UOTYoYgPWpFGIiw=\");\n_c = StarRendererCanvas;\n/* harmony default export */ __webpack_exports__[\"default\"] = (StarRendererCanvas);\nvar _c;\n$RefreshReg$(_c, \"StarRendererCanvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/StarRendererCanvas.tsx\n"));

/***/ })

}]);